
<head><script src="~/Scripts/jquery-3.2.1.min.js" type="text/javascript"></script>
<script
      src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAkUiizrTtqfg1hhmuN_eB1j0YJWt6Yyuw&callback=initMap"
      defer
    ></script></head>




<style>
    #map {
  height: 400px; /* The height is 400 pixels */
  width: 100%; /* The width is the width of the web page */
}
</style>

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
 
 

    <link rel="stylesheet" type="text/css" href="./style.css" />
    <script type="module" src="./index.js"></script>

<h3>My Google Maps Demo</h3>
<div>
    <div id="fordragging" >
        <input id="pac-input" class="controls" type="text" placeholder="search for keyword"><input type="button" class="btn btn-primary searchbut" id="searchid" value="search" style="margin-top:9px;"/>
    </div>
    <div id="map"></div>
    </div>
    <script>
        var map;
        function initMap() {
  
        const uluru = { lat: 22.258652, lng: 71.192383 };
        
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 12,
            center: uluru,
        });

    
  
    var defaultBounds = new google.maps.LatLngBounds(  
      new google.maps.LatLng(-33.8902, 151.1759),  
      new google.maps.LatLng(-33.8474, 151.2631));  
    map.fitBounds(defaultBounds);  
  
    // Create the search box and link it to the UI element.  
    var input =(document.getElementById('txtsearch'));  
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);  
  
    var searchBox = new google.maps.places.SearchBox((input));  
  
     
    // Listen for the event fired when the user selects an item from the  
    // pick list. Retrieve the matching places for that item.  
    google.maps.event.addListener(searchBox, 'places_changed', function () {  
        var places = searchBox.getPlaces();  
  
        if (places.length == 0) {  
            return;  
        }  
        for (var i = 0, marker; marker = markers[i]; i++) {  
            marker.setMap(null);  
        }  
  
        // For each place, get the icon, place name, and location.  
        markers = [];  
        var bounds = new google.maps.LatLngBounds();  
        for (var i = 0, place; place = places[i]; i++) {  
            var image = {  
                url: place.icon,  
                size: new google.maps.Size(71, 71),  
                origin: new google.maps.Point(0, 0),  
                anchor: new google.maps.Point(17, 34),  
                scaledSize: new google.maps.Size(25, 25)  
            };  
  
            // Create a marker for each place.  
            var marker = new google.maps.Marker({  
                map: map,  
                icon: image,  
                title: place.name,  
                position: place.geometry.location  
            });  
  
            markers.push(marker);  
  
            bounds.extend(place.geometry.location);  
        }  
  
        map.fitBounds(bounds);  
    });  
      
  
      
    // current map's viewport.  
    google.maps.event.addListener(map, 'bounds_changed', function () {  
        var bounds = map.getBounds();  
        searchBox.setBounds(bounds);  
    });  
}  
  
google.maps.event.addDomListener(window, 'load', LoadGoogleMAP);

    </script>